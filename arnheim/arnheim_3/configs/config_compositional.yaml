---
# Render methods
# opacity patches overlay each other using a combination of alpha and depth,
# transparency _adds_ patch colours (black therefore appearing transparent),
# and masked transparency blends patches using the alpha channel.
render_method: "masked_transparency_clipped"
num_patches: 100
# Colour transformations can be: "none", "RGB space", "HSV space"
colour_transformations: "RGB space"

# Number of training steps
optim_steps: 10000
learning_rate: 0.1
trace_every: 50

### Load segmented patches
patch_set: "animals.npy"

### Resize image patches to low- and high-res.
fixed_scale_patches: True
fixed_scale_coeff: 0.5

# Configure a background, e.g. uploaded picture or solid colour.
background_url: ""
# Background usage: Global: use image across whole image; Local: reuse same image for every tile
background_use: "Global"
# Colour configuration for solid colour background
background_red: 0
background_green: 0
background_blue: 0

# Enter a global description of the image, e.g. 'a photorealistic chicken'
global_prompt: "a photorealistic chicken"

compositional_image: True

# Single image (i.e. no tiling) composition prompts
# Specify 3x3 prompts for each composition region (left to right, starting at the top)
prompt_x0_y0: "a photorealistic sky with sun"
prompt_x1_y0: "a photorealistic sky"
prompt_x2_y0: "a photorealistic sky with moon"
prompt_x0_y1: "a photorealistic tree"
prompt_x1_y1: "a photorealistic tree"
prompt_x2_y1: "a photorealistic tree"
prompt_x0_y2: "a photorealistic field"
prompt_x1_y2: "a photorealistic field"
prompt_x2_y2: "a photorealistic chicken"
